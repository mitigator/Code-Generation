{
  "text": "```json\n[\n  {\n    \"file_path\": \"backend/src/main/java/com/tms/controller/DataAnalyticsController.java\",\n    \"code\": \"package com.tms.controller;\\n\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.HttpStatus;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.*;\\nimport com.tms.model.DataAnalytics;\\nimport com.tms.service.DataAnalyticsService;\\nimport javax.validation.Valid;\\nimport java.util.List;\\n\\n@RestController\\n@RequestMapping(\\\"/data-analytics\\\")\\n@CrossOrigin(origins = \\\"*\\\")\\npublic class DataAnalyticsController {\\n\\n    @Autowired\\n    private DataAnalyticsService dataAnalyticsService;\\n\\n    @GetMapping\\n    public ResponseEntity<List<DataAnalytics>> getAllDataAnalytics() {\\n        try {\\n            List<DataAnalytics> dataAnalytics = dataAnalyticsService.getAllDataAnalytics();\\n            return new ResponseEntity<>(dataAnalytics, HttpStatus.OK);\\n        } catch (Exception e) {\\n            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\\n        }\\n    }\\n\\n    @PostMapping\\n    public ResponseEntity<DataAnalytics> createDataAnalytics(@Valid @RequestBody DataAnalytics dataAnalytics) {\\n        try {\\n            if (dataAnalytics.getTrafficVolume() < 0 || dataAnalytics.getTravelTime() < 0 || dataAnalytics.getIncidentRate() < 0) {\\n                return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);\\n            }\\n            DataAnalytics created = dataAnalyticsService.createDataAnalytics(dataAnalytics);\\n            return new ResponseEntity<>(created, HttpStatus.CREATED);\\n        } catch (Exception e) {\\n            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\\n        }\\n    }\\n\\n    @GetMapping(\\\"/{id}\\\")\\n    public ResponseEntity<DataAnalytics> getDataAnalyticsById(@PathVariable Long id) {\\n        try {\\n            if (id == null || id <= 0) {\\n                return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);\\n            }\\n            DataAnalytics dataAnalytics = dataAnalyticsService.getDataAnalyticsById(id);\\n            if (dataAnalytics != null) {\\n                return new ResponseEntity<>(dataAnalytics, HttpStatus.OK);\\n            } else {\\n                return new ResponseEntity<>(null, HttpStatus.NOT_FOUND);\\n            }\\n        } catch (Exception e) {\\n            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\\n        }\\n    }\\n\\n    @PutMapping(\\\"/{id}\\\")\\n    public ResponseEntity<DataAnalytics> updateDataAnalytics(@PathVariable Long id, @Valid @RequestBody DataAnalytics dataAnalytics) {\\n        try {\\n            if (id == null || id <= 0) {\\n                return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);\\n            }\\n            if (dataAnalytics.getTrafficVolume() < 0 || dataAnalytics.getTravelTime() < 0 || dataAnalytics.getIncidentRate() < 0) {\\n                return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);\\n            }\\n            DataAnalytics updated = dataAnalyticsService.updateDataAnalytics(id, dataAnalytics);\\n            if (updated != null) {\\n                return new ResponseEntity<>(updated, HttpStatus.OK);\\n            } else {\\n                return new ResponseEntity<>(null, HttpStatus.NOT_FOUND);\\n            }\\n        } catch (Exception e) {\\n            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\\n        }\\n    }\\n\\n    @DeleteMapping(\\\"/{id}\\\")\\n    public ResponseEntity<HttpStatus> deleteDataAnalytics(@PathVariable Long id) {\\n        try {\\n            if (id == null || id <= 0) {\\n                return new ResponseEntity<>(HttpStatus.BAD_REQUEST);\\n            }\\n            dataAnalyticsService.deleteDataAnalytics(id);\\n            return new ResponseEntity<>(HttpStatus.NO_CONTENT);\\n        } catch (Exception e) {\\n            return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);\\n        }\\n    }\\n\\n    @GetMapping(\\\"/traffic-volume/average\\\")\\n    public ResponseEntity<Double> getAverageTrafficVolume() {\\n        try {\\n            List<DataAnalytics> analytics = dataAnalyticsService.getAllDataAnalytics();\\n            double average = analytics.stream().mapToInt(DataAnalytics::getTrafficVolume).average().orElse(0.0);\\n            return new ResponseEntity<>(average, HttpStatus.OK);\\n        } catch (Exception e) {\\n            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\\n        }\\n    }\\n\\n    @GetMapping(\\\"/incident-rate/high\\\")\\n    public ResponseEntity<List<DataAnalytics>> getHighIncidentRateAreas() {\\n        try {\\n            List<DataAnalytics> analytics = dataAnalyticsService.getAllDataAnalytics();\\n            List<DataAnalytics> highIncidentAreas = analytics.stream()\\n                .filter(data -> data.getIncidentRate() > 0.1)\\n                .toList();\\n            return new ResponseEntity<>(highIncidentAreas, HttpStatus.OK);\\n        } catch (Exception e) {\\n            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\\n        }\\n    }\\n}\",\n    \"description\": \"Fully implemented DataAnalyticsController with comprehensive CRUD operations, input validation, error handling, and additional analytics endpoints. Includes service injection, proper HTTP status codes, request validation for negative values, and specialized endpoints for traffic analysis such as average traffic volume calculation and high incident rate area identification.\"\n  },\n  {\n    \"file_path\": \"backend/src/main/resources/data.sql\",\n    \"code\": \"-- Initial data for Traffic Management System database\\n\\n-- Insert Users\\nINSERT INTO users (name, email, role) VALUES \\n('Admin User', 'admin@tms.com', 'ADMIN'),\\n('Traffic Manager', 'manager@tms.com', 'MANAGER'),\\n('Operator One', 'operator1@tms.com', 'OPERATOR'),\\n('Operator Two', 'operator2@tms.com', 'OPERATOR'),\\n('Analyst', 'analyst@tms.com', 'ANALYST');\\n\\n-- Insert Traffic Signals\\nINSERT INTO traffic_signals (location, status, control_settings, created_at, updated_at) VALUES \\n('Main St & 1st Ave', 'ACTIVE', 'AUTO_CYCLE:120,RED:30,YELLOW:5,GREEN:85', NOW(), NOW()),\\n('Main St & 2nd Ave', 'ACTIVE', 'AUTO_CYCLE:90,RED:25,YELLOW:5,GREEN:60', NOW(), NOW()),\\n('Oak St & Central Blvd', 'MAINTENANCE', 'MANUAL_OVERRIDE:ON', NOW(), NOW()),\\n('Highway 101 & Exit 15', 'ACTIVE', 'AUTO_CYCLE:150,RED:45,YELLOW:10,GREEN:95', NOW(), NOW()),\\n('Downtown Plaza', 'ACTIVE', 'AUTO_CYCLE:100,RED:30,YELLOW:5,GREEN:65', NOW(), NOW());\\n\\n-- Insert Incidents\\nINSERT INTO incidents (location, type, status, severity, description, reported_at, resolved_at) VALUES \\n('Main St & 3rd Ave', 'ACCIDENT', 'RESOLVED', 'MEDIUM', 'Minor fender bender, no injuries', NOW() - INTERVAL 2 HOUR, NOW() - INTERVAL 1 HOUR),\\n('Highway 101 Mile 25', 'ROAD_CLOSURE', 'ACTIVE', 'HIGH', 'Construction work blocking right lane', NOW() - INTERVAL 4 HOUR, NULL),\\n('Oak St Bridge', 'WEATHER', 'RESOLVED', 'LOW', 'Fog reducing visibility', NOW() - INTERVAL 6 HOUR, NOW() - INTERVAL 3 HOUR),\\n('Central Blvd & Park Ave', 'VEHICLE_BREAKDOWN', 'ACTIVE', 'MEDIUM', 'Broken down truck in left lane', NOW() - INTERVAL 30 MINUTE, NULL),\\n('Downtown Area', 'SPECIAL_EVENT', 'SCHEDULED', 'MEDIUM', 'Marathon route affecting traffic', NOW() + INTERVAL 2 DAY, NULL);\\n\\n-- Insert Traffic Updates\\nINSERT INTO traffic_updates (traffic_conditions, incidents, road_closures, update_time, area) VALUES \\n('Heavy traffic on Main St, moderate on Oak St', 'Active accident at Central Blvd', 'Highway 101 right lane closed', NOW(), 'Downtown'),\\n('Light traffic conditions citywide', 'No active incidents', 'No road closures', NOW() - INTERVAL 1 HOUR, 'Citywide'),\\n('Congestion on Highway 101 due to construction', 'Construction blocking lane', 'Right lane closed Mile 25-27', NOW() - INTERVAL 30 MINUTE, 'Highway'),\\n('Normal traffic flow on residential streets', 'Minor incident cleared', 'All roads open', NOW() - INTERVAL 2 HOUR, 'Residential'),\\n('Rush hour traffic building up', 'Vehicle breakdown reported', 'No closures', NOW() - INTERVAL 15 MINUTE, 'Business District');\\n\\n-- Insert Data Analytics\\nINSERT INTO data_analytics (traffic_volume, travel_time, incident_rate, analysis_date, location_area, peak_hours) VALUES \\n(1250, 25, 0.05, CURDATE(), 'Main Street Corridor', '08:00-09:00,17:00-18:00'),\\n(890, 18, 0.03, CURDATE(), 'Oak Street District', '08:30-09:30,17:30-18:30'),\\n(2100, 35, 0.12, CURDATE(), 'Highway 101 Section', '07:30-09:00,16:30-18:30'),\\n(650, 15, 0.02, CURDATE(), 'Residential Area', '08:00-08:30,17:00-17:30'),\\n(1800, 28, 0.08, CURDATE(), 'Downtown Plaza', '08:00-09:30,17:00-19:00'),\\n(1100, 22, 0.04, CURDATE() - INTERVAL 1 DAY, 'Main Street Corridor', '08:00-09:00,17:00-18:00'),\\n(950, 20, 0.06, CURDATE() - INTERVAL 1 DAY, 'Oak Street District', '08:30-09:30,17:30-18:30'),\\n(2250, 40, 0.15, CURDATE() - INTERVAL 1 DAY, 'Highway 101 Section', '07:30-09:00,16:30-18:30');\\n\\n-- Insert System Configuration Data\\nINSERT INTO system_config (config_key, config_value, description) VALUES \\n('MAX_SIGNAL_CYCLE_TIME', '180', 'Maximum allowed signal cycle time in seconds'),\\n('DEFAULT_INCIDENT_TIMEOUT', '3600', 'Default incident timeout in seconds'),\\n('TRAFFIC_UPDATE_INTERVAL', '300', 'Traffic update interval in seconds'),\\n('HIGH_INCIDENT_RATE_THRESHOLD', '0.1', 'Threshold for high incident rate areas'),\\n('ANALYTICS_RETENTION_DAYS', '90', 'Number of days to retain analytics data');\\n\",\n    \"description\": \"Comprehensive initial data setup for the Traffic Management System database including sample users with different roles, traffic signals with realistic configurations, various incident types and statuses, traffic updates for different areas, detailed analytics data with traffic patterns, and system configuration parameters. Data includes timestamps, relationships between entities, and realistic traffic management scenarios.\"\n  },\n  {\n    \"file_path\": \"backend/src/main/resources/schema.sql\",\n    \"code\": \"-- Traffic Management System Database Schema\\n\\n-- Drop tables if they exist (for clean setup)\\nDROP TABLE IF EXISTS data_analytics;\\nDROP TABLE IF EXISTS traffic_updates;\\nDROP TABLE IF EXISTS incidents;\\nDROP TABLE IF EXISTS traffic_signals;\\nDROP TABLE IF EXISTS system_config;\\nDROP TABLE IF EXISTS users;\\n\\n-- Users table\\nCREATE TABLE users (\\n    id BIGINT AUTO_INCREMENT PRIMARY KEY,\\n    name VARCHAR(255) NOT NULL,\\n    email VARCHAR(255) NOT NULL UNIQUE,\\n    role VARCHAR(50) NOT NULL,\\n    password VARCHAR(255),\\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\\n    is_active BOOLEAN DEFAULT TRUE,\\n    last_login TIMESTAMP NULL,\\n    INDEX idx_email (email),\\n    INDEX idx_role (role)\\n);\\n\\n-- Traffic Signals table\\nCREATE TABLE traffic_signals (\\n    id BIGINT AUTO_INCREMENT PRIMARY KEY,\\n    location VARCHAR(500) NOT NULL,\\n    status VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',\\n    control_settings TEXT,\\n    latitude DECIMAL(10, 8),\\n    longitude DECIMAL(11, 8),\\n    signal_type VARCHAR(50) DEFAULT 'STANDARD',\\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\\n    last_maintenance TIMESTAMP NULL,\\n    maintenance_notes TEXT,\\n    INDEX idx_location (location(255)),\\n    INDEX idx_status (status),\\n    INDEX idx_coordinates (latitude, longitude)\\n);\\n\\n-- Incidents table\\nCREATE TABLE incidents (\\n    id BIGINT AUTO_INCREMENT PRIMARY KEY,\\n    location VARCHAR(500) NOT NULL,\\n    type VARCHAR(100) NOT NULL,\\n    status VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',\\n    severity VARCHAR(20) DEFAULT 'MEDIUM',\\n    description TEXT,\\n    reported_by BIGINT,\\n    reported_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n    resolved_at TIMESTAMP NULL,\\n    latitude DECIMAL(10, 8),\\n    longitude DECIMAL(11, 8),\\n    estimated_duration INT, -- in minutes\\n    affected_lanes INT DEFAULT 1,\\n    INDEX idx_location (location(255)),\\n    INDEX idx_type (type),\\n    INDEX idx_status (status),\\n    INDEX idx_severity (severity),\\n    INDEX idx_reported_at (reported_at),\\n    INDEX idx_coordinates (latitude, longitude),\\n    FOREIGN KEY (reported_by) REFERENCES users(id) ON DELETE SET NULL\\n);\\n\\n-- Traffic Updates table\\nCREATE TABLE traffic_updates (\\n    id BIGINT AUTO_INCREMENT PRIMARY KEY,\\n    traffic_conditions TEXT NOT NULL,\\n    incidents TEXT,\\n    road_closures TEXT,\\n    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n    area VARCHAR(255),\\n    traffic_flow_rate DECIMAL(5, 2), -- vehicles per hour in thousands\\n    average_speed DECIMAL(5, 2), -- km/h\\n    congestion_level VARCHAR(20) DEFAULT 'NORMAL',\\n    weather_conditions VARCHAR(100),\\n    visibility_km DECIMAL(4, 2),\\n    created_by BIGINT,\\n    INDEX idx_update_time (update_time),\\n    INDEX idx_area (area),\\n    INDEX idx_congestion_level (congestion_level),\\n    FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL\\n);\\n\\n-- Data Analytics table\\nCREATE TABLE data_analytics (\\n    id BIGINT AUTO_INCREMENT PRIMARY KEY,\\n    traffic_volume INT NOT NULL DEFAULT 0,\\n    travel_time INT NOT NULL DEFAULT 0, -- in minutes\\n    incident_rate DECIMAL(5, 4) NOT NULL DEFAULT 0.0000,\\n    analysis_date DATE NOT NULL,\\n    location_area VARCHAR(255),\\n    peak_hours VARCHAR(255), -- comma-separated time ranges\\n    average_speed DECIMAL(5, 2), -- km/h\\n    congestion_index DECIMAL(5, 2), -- 0-100 scale\\n    fuel_efficiency DECIMAL(5, 2), -- km per liter\\n    co2_emissions DECIMAL(8, 2), -- kg per day\\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\\n    INDEX idx_analysis_date (analysis_date),\\n    INDEX idx_location_area (location_area),\\n    INDEX idx_traffic_volume (traffic_volume),\\n    INDEX idx_incident_rate (incident_rate),\\n    INDEX idx_created_at (created_at)\\n);\\n\\n-- System Configuration table\\nCREATE TABLE system_config (\\n    id BIGINT AUTO_INCREMENT PRIMARY KEY,\\n    config_key VARCHAR(100) NOT NULL UNIQUE,\\n    config_value TEXT NOT NULL,\\n    description TEXT,\\n    data_type VARCHAR(20) DEFAULT 'STRING',\\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\\n    INDEX idx_config_key (config_key)\\n);\\n\\n-- Add constraints and triggers\\n\\n-- Ensure incident rate is between 0 and 1\\nALTER TABLE data_analytics ADD CONSTRAINT chk_incident_rate CHECK (incident_rate >= 0 AND incident_rate <= 1);\\n\\n-- Ensure traffic volume is non-negative\\nALTER TABLE data_analytics ADD CONSTRAINT chk_traffic_volume CHECK (traffic_volume >= 0);\\n\\n-- Ensure travel time is non-negative\\nALTER TABLE data_analytics ADD CONSTRAINT chk_travel_time CHECK (travel_time >= 0);\\n\\n-- Ensure valid status values for traffic signals\\nALTER TABLE traffic_signals ADD CONSTRAINT chk_signal_status CHECK (status IN ('ACTIVE', 'INACTIVE', 'MAINTENANCE', 'ERROR'));\\n\\n-- Ensure valid status values for incidents\\nALTER TABLE incidents ADD CONSTRAINT chk_incident_status CHECK (status IN ('ACTIVE', 'RESOLVED', 'SCHEDULED', 'CANCELLED'));\\n\\n-- Ensure valid severity values for incidents\\nALTER TABLE incidents ADD CONSTRAINT chk_incident_severity CHECK (severity IN ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL'));\\n\\n-- Ensure valid user roles\\nALTER TABLE users ADD CONSTRAINT chk_user_role CHECK (role IN ('ADMIN', 'MANAGER', 'OPERATOR', 'ANALYST', 'VIEWER'));\\n\\n-- Create views for common queries\\n\\n-- Active incidents view\\nCREATE VIEW active_incidents AS\\nSELECT i.*, u.name as reported_by_name\\nFROM incidents i\\nLEFT JOIN users u ON i.reported_by = u.id\\nWHERE i.status = 'ACTIVE';\\n\\n-- Traffic analytics summary view\\nCREATE VIEW traffic_analytics_summary AS\\nSELECT \\n    location_area,\\n    AVG(traffic_volume) as avg_traffic_volume,\\n    AVG(travel_time) as avg_travel_time,\\n    AVG(incident_rate) as avg_incident_rate,\\n    MAX(analysis_date) as latest_analysis\\nFROM data_analytics\\nGROUP BY location_area;\\n\\n-- Signal status overview\\nCREATE VIEW signal_status_overview AS\\nSELECT \\n    status,\\n    COUNT(*) as signal_count,\\n    GROUP_CONCAT(location SEPARATOR '; ') as locations\\nFROM traffic_signals\\nGROUP BY status;\\n\",\n    \"description\": \"Complete database schema for the Traffic Management System with all required tables, relationships, indexes, and constraints. Includes comprehensive table definitions for users, traffic signals, incidents, traffic updates, and data analytics with appropriate data types, foreign keys, and check constraints. Features additional columns for enhanced functionality like GPS coordinates, timestamps, severity levels, and performance metrics. Includes database views for common queries, proper indexing for query optimization, and data integrity constraints to ensure valid data entry across all entities.\"\n  }\n]\n```",
  "chatId": "28b7f877-e002-4d45-b0df-6749b6a75d73",
  "chatMessageId": "b2cd1859-5f2b-41ae-9840-2c0a8c636310",
  "isStreamValid": false,
  "sessionId": "28b7f877-e002-4d45-b0df-6749b6a75d73"
}